-- 그룹함수 SUM, AVG, MAX, MIN, COUNT
SELECT SUM(SALARY), AVG(SALARY), MAX(SALARY), MIN(SALARY), COUNT(*), COUNT(SALARY) FROM EMPLOYEES;

SELECT COUNT(*) FROM EMPLOYEES; -- 전체 행개수
SELECT COUNT(FIRST_NAME) FROM EMPLOYEES; -- NULL이 아닌 값의 개수
SELECT COUNT(COMMISSION_PCT) FROM EMPLOYEES;

SELECT SUM(SALARY), AVG(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 60; -- 60부서에 대한 결과 값

-- 주의할점: 그룹함수가 일반 컬럼과 동시 출력 불가
--SELECT FIRST_NAME, SUM(SALARY)
--FROM EMPLOYEES;

--------------------------------------------------------------------------------
-- GROUP BY 컬럼
-- GRUOP BY에 묶이지 않은 컬럼은 SELECT구문에서 사용이 불가능
SELECT DEPARTMENT_ID, SUM(SALARY), AVG(SALARY), COUNT(SALARY) 
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

SELECT JOB_ID, SUM(SALARY), AVG(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID;

-- 2개 이상의 그룹화
SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY), AVG(SALARY), COUNT(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID, JOB_ID
ORDER BY DEPARTMENT_ID;

-- GROUP BY 함수가 WHERE 구문에 적용할 수 없다.
--SELECT DEPARTMENT_ID,
--       SUM(SALARY)
--FROM EMPLOYEES
--WHERE SUM(SALARY) >= 5000
--GROUP BY DEPARTMENT_ID;

--------------------------------------------------------------------------------
-- HAVING : GROUP BY의 조건
SELECT DEPARTMENT_ID,
       SUM(SALARY),
       AVG(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING SUM(SALARY) >= 5000 -- 그룹화된 결과에 대한 조건
ORDER BY SUM(SALARY) DESC;

SELECT JOB_ID,
       COUNT(*)
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING COUNT(*) >= 20; -- 그룹화된 결과에 대한 조건

-- 부서아이디가 50이상인 ROW데이터를 부서별로 그룹화 시키고, 평균급여를 출력(평균급여가 5000이상만)
SELECT DEPARTMENT_ID,
       TRUNC(AVG(SALARY))
FROM EMPLOYEES
WHERE DEPARTMENT_ID >= 50
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) >= 5000
ORDER BY AVG(SALARY);

--------------------------------------------------------------------------------
-- GRUOP BY 롤업, 큐브, 그룹핑
SELECT DEPARTMENT_ID, JOB_ID, COUNT(*), SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID, JOB_ID
ORDER BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, JOB_ID, COUNT(*), SUM(SALARY)
FROM EMPLOYEES
GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID)
ORDER BY DEPARTMENT_ID;

-- ROLLUP 그룹핑 한개 (총계 출력)
SELECT DEPARTMENT_ID,  
       SUM(SALARY)
FROM EMPLOYEES
GROUP BY ROLLUP(DEPARTMENT_ID)
ORDER BY DEPARTMENT_ID;

-- CUBE
-- 각 그룹별 소계를 출력, + 서브 그룹의 소계를 표현
SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY CUBE(DEPARTMENT_ID, JOB_ID)
ORDER BY DEPARTMENT_ID;

-- GROUPING(칼럼)
-- GROUP BY에 의해 산출되면 0, 합계 OR 소계이면 1 반환
SELECT DEPARTMENT_ID,
       DECODE(GROUPING(JOB_ID), 1, '소계', JOB_ID),
       SUM(SALARY),
       TRUNC(AVG(SALARY)),
       COUNT(*),
       GROUPING(DEPARTMENT_ID),
       GROUPING(JOB_ID)
FROM EMPLOYEES
GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID)
ORDER BY DEPARTMENT_ID;

--------------------------------------------------------------------------------
-- 연습문제
--문제 1.
--사원 테이블에서 JOB_ID별 사원 수를 구하세요.
--사원 테이블에서 JOB_ID별 월급의 평균을 구하세요. 월급의 평균 순으로 내림차순 정렬하세요.
SELECT JOB_ID,
       COUNT(*) AS 사원수,
       AVG(SALARY) AS 월급의평균
FROM EMPLOYEES
GROUP BY JOB_ID
ORDER BY AVG(SALARY) DESC;

--문제 2.
--사원 테이블에서 입사 년도 별 사원 수를 구하세요.
SELECT SUBSTR(HIRE_DATE, 1, 2) || '년도' AS 입사년도,
       COUNT(*) AS 사원수
FROM EMPLOYEES
GROUP BY SUBSTR(HIRE_DATE, 1, 2);

SELECT TO_CHAR(HIRE_DATE, 'YYYY"년도"') AS 입사년도,
       COUNT(*) AS 사원수
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE, 'YYYY"년도"');

--문제 3.
--급여가 1000 이상인 사원들의 부서별 평균 급여를 출력하세요. 
--단, 부서 평균 급여가 2000이상인 부서만 출력
SELECT DEPARTMENT_ID,
       AVG(SALARY)
FROM EMPLOYEES
WHERE SALARY >= 1000
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) >= 2000;

--문제 4.
--사원 테이블에서 commission_pct(커미션) 컬럼이 null이 아닌 사람들의
--department_id(부서별) salary(월급)의 평균, 합계, count를 구합니다.
--조건 1) 월급의 합계, 평균은 커미션을 적용시킨 월급입니다.
--조건 2) 평균은 소수 2째 자리에서 절삭 하세요.
SELECT DEPARTMENT_ID, 
       TRUNC(AVG(SALARY * COMMISSION_PCT + SALARY), 2) AS AVG,
       SUM(SALARY * COMMISSION_PCT + SALARY)AS SUM ,
       COUNT(*)
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL
GROUP BY DEPARTMENT_ID;

--문제 5.
--직업별 월급합, 총합계를 출력하세요.
SELECT DECODE(GROUPING(JOB_ID), 1, '합계', JOB_ID),
       SUM(SALARY)
--       GROUPING(JOB_ID)
FROM EMPLOYEES
GROUP BY ROLLUP(JOB_ID);

SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY JOB_ID
UNION ALL
SELECT '합계', SUM(SALARY) FROM EMPLOYEES;

--문제 6.
--부서별, JOB_ID를 그룹핑 하여 토탈, 합계를 출력하세요.
--GROUPING() 을 이용하여 소계 합계를 표현하세요.
SELECT DECODE(GROUPING(DEPARTMENT_ID), 1, '합계', DEPARTMENT_ID) AS DEPARTMENT_ID,
       DECODE(GROUPING(JOB_ID), 1, '소계', JOB_ID) AS JOB_ID,
       COUNT(*) AS TOTAL,
       SUM(SALARY) AS SUM
--       GROUPING(DEPARTMENT_ID),
--       GROUPING(JOB_ID)
FROM EMPLOYEES
GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID)
ORDER BY SUM;